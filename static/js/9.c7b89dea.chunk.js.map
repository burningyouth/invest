{"version":3,"sources":["shared/ui/MenuTrigger.tsx","shared/ui/MenuList.tsx","shared/ui/Toolbar.tsx","shared/ui/Logo.tsx","pages/Routes.tsx"],"names":["isOpen","setIsOpen","children","onOpenChange","history","useHistory","onAction","key","push","String","position","bottom","left","borderTopWidth","borderColor","padding","width","size","aria-label","Error","lazy","Settings","Layout","Ticker","menuItems","exact","path","heading","content","buttons"],"mappings":"wTAUe,cAAwD,IAArDA,EAAoD,EAApDA,OAAQC,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,SACnC,OACE,eAAC,IAAD,CAAaF,OAAQA,EAAQG,aAAc,SAACH,GAAD,OAAYC,EAAUD,IAAjE,UACE,cAAC,IAAD,UAAgBA,EAAwB,cAAC,IAAD,IAAf,cAAC,IAAD,MACzB,mCAAGE,Q,QCRM,cAAkC,IAA/BA,EAA8B,EAA9BA,SACVE,EAAUC,cAChB,OAAO,cAAC,IAAD,CAAMC,SAAU,SAACC,GAAD,OAASH,EAAQI,KAAKC,OAAOF,KAA7C,SAAqDL,K,SCH/C,cAAiC,IAA9BA,EAA6B,EAA7BA,SAChB,OACE,cAAC,IAAD,CACEQ,SAAS,WACTC,OAAQ,EACRC,KAAM,EACNC,eAAe,OACfC,YAAY,WACZC,QAAQ,WACRC,MAAM,OAPR,SASGd,K,kBCVQ,cAA0B,IAAvBe,EAAsB,EAAtBA,KAChB,OAAO,cAAC,IAAD,CAAYC,aAAW,OAAOD,KAAMA,M,iCCP7C,mDAKME,EAAQC,gBAAK,kBAAM,iCACnBC,EAAWD,gBAAK,kBAAM,wDACtBE,EAASF,gBAAK,kBAAM,iCACpBG,EAASH,gBAAK,kBAAM,uDAEX,qBACb,OACE,cAACE,EAAD,CACEE,UACE,eAAC,IAAD,WACE,cAAC,IAAD,wDAAU,KACV,cAAC,IAAD,4CAAU,WACV,cAAC,IAAD,oEAAU,gBALhB,SASE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,kBAGA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAAlB,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,kBAAlB,SACE,cAACH,EAAD,MAEF,cAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,iBAAlB,2BAGA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,iBAAlB,uBAGA,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,yBAAlB,8BAGA,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAACP,EAAD,CACEQ,QAAQ,6HACRC,QAAQ,wOACRC,QAAS,CAAC","file":"static/js/9.c7b89dea.chunk.js","sourcesContent":["import { MenuTrigger, ActionButton } from \"@adobe/react-spectrum\"\nimport { BasicComponentProps } from \"./types\"\nimport ShowMenu from \"@spectrum-icons/workflow/ShowMenu\"\nimport Close from \"@spectrum-icons/workflow/Close\"\n\nexport type MenuTriggerProps = BasicComponentProps & {\n  isOpen: boolean\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport default ({ isOpen, setIsOpen, children }: MenuTriggerProps) => {\n  return (\n    <MenuTrigger isOpen={isOpen} onOpenChange={(isOpen) => setIsOpen(isOpen)}>\n      <ActionButton>{!isOpen ? <ShowMenu /> : <Close />}</ActionButton>\n      <>{children}</>\n    </MenuTrigger>\n  )\n}\n","import { Menu } from \"@adobe/react-spectrum\"\nimport { useHistory } from \"react-router-dom\"\nimport { MenuProps } from \"@react-types/menu\"\n\nexport type MenuListProps = Omit<MenuProps<any>, \"onAction\">\n\nexport default ({ children }: MenuListProps) => {\n  const history = useHistory()\n  return <Menu onAction={(key) => history.push(String(key))}>{children}</Menu>\n}\n","import { View } from \"@adobe/react-spectrum\"\nimport { BasicComponentProps } from \"./types\"\n\nexport type ToolbarProps = BasicComponentProps\n\nexport default ({ children }: ToolbarProps) => {\n  return (\n    <View\n      position=\"absolute\"\n      bottom={0}\n      left={0}\n      borderTopWidth=\"thin\"\n      borderColor=\"gray-300\"\n      padding=\"size-150\"\n      width=\"100%\"\n    >\n      {children}\n    </View>\n  )\n}\n","import GraphDonut from \"@spectrum-icons/workflow/GraphDonut\"\n\nexport type LogoProps = {\n  size?: \"S\" | \"M\" | \"L\"\n}\n\nexport default ({ size }: LogoProps) => {\n  return <GraphDonut aria-label=\"Logo\" size={size} />\n}\n","import { Switch, Route } from \"react-router-dom\"\nimport { lazy } from \"react\"\nimport { MenuList } from \"../shared/ui\"\nimport { Item } from \"@adobe/react-spectrum\"\n\nconst Error = lazy(() => import(\"./Error\"))\nconst Settings = lazy(() => import(\"./Settings\"))\nconst Layout = lazy(() => import(\"../widgets/layout\"))\nconst Ticker = lazy(() => import(\"./Ticker\"))\n\nexport default () => {\n  return (\n    <Layout\n      menuItems={\n        <MenuList>\n          <Item key=\"/\">Главная</Item>\n          <Item key=\"/ticker\">Тикер</Item>\n          <Item key=\"/settings\">Настройки</Item>\n        </MenuList>\n      }\n    >\n      <Switch>\n        <Route exact path=\"/\">\n          Main\n        </Route>\n        <Route exact path=\"/settings\">\n          <Settings />\n        </Route>\n        <Route exact path=\"/ticker/:query?\">\n          <Ticker />\n        </Route>\n        <Route exact path=\"/portfolio/new\">\n          New portfolio\n        </Route>\n        <Route exact path=\"/portfolio/:id\">\n          Portfolio\n        </Route>\n        <Route exact path=\"/portfolio/:id/:ticker\">\n          Portfolio ticker\n        </Route>\n        <Route path=\"*\">\n          <Error\n            heading=\"Страницы не существует\"\n            content=\"Наверное, вы перешли по неправильной ссылке.\"\n            buttons={[\"goBack\"]}\n          />\n        </Route>\n      </Switch>\n    </Layout>\n  )\n}\n"],"sourceRoot":""}