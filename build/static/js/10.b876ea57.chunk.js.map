{"version":3,"sources":["widgets/header/index.tsx","shared/hooks/useMediaQuery.ts","widgets/layout/index.tsx"],"names":["children","useState","isOpen","setIsOpen","isMobile","query","window","matchMedia","Error","mediaQuery","Boolean","matches","match","setMatch","useEffect","handler","addEventListener","removeEventListener","useMediaQuery","borderBottomWidth","borderColor","padding","gap","alignItems","height","justifyContent","size","level","marginTop","marginBottom","menuItems","direction","overflow","position"],"mappings":"6LAUe,cAAgC,IAA7BA,EAA4B,EAA5BA,SAA4B,EAChBC,oBAAS,GADO,mBACrCC,EADqC,KAC7BC,EAD6B,KAEtCC,ECVqB,SAACC,GAC5B,GAAsB,qBAAXC,QAAuD,qBAAtBA,OAAOC,WACjD,MAAMC,MAAM,sTAEd,IAAMC,EAAaH,OAAOC,WAAWF,GAJS,EAKpBJ,mBAASS,QAAQD,EAAWE,UALR,mBAKvCC,EALuC,KAKhCC,EALgC,KAa9C,OANAC,qBAAU,WACR,IAAMC,EAAU,kBAAMF,EAASH,QAAQD,EAAWE,WAElD,OADAF,EAAWO,iBAAiB,SAAUD,GAC/B,kBAAMN,EAAWQ,oBAAoB,SAAUF,MACrD,IAEIH,EDHUM,CAAc,qBAE/B,OACE,cAAC,IAAD,CAAMC,kBAAkB,OAAOC,YAAY,WAAWC,QAAQ,WAA9D,SACE,eAAC,IAAD,CACEC,IAAI,UACJC,WAAW,SACXC,OAAO,OACPC,eAAe,gBAJjB,UAME,eAAC,IAAD,CAAMH,IAAI,WAAWC,WAAW,SAAhC,UACE,cAAC,IAAD,CAAMG,KAAK,MACX,cAAC,IAAD,CAASC,MAAOvB,EAAW,EAAI,EAAGwB,UAAU,IAAIC,aAAa,IAA7D,gGAIF,eAAC,IAAD,CAAMP,IAAI,WAAWC,WAAW,SAAhC,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAarB,OAAQA,EAAQC,UAAWA,EAAxC,SACGH,aEvBE,sBAA2C,IAAxCA,EAAuC,EAAvCA,SAAU8B,EAA6B,EAA7BA,UAC1B,OACE,eAAC,IAAD,CAAMC,UAAU,SAASP,OAAO,OAAOF,IAAI,WAA3C,UACE,cAAC,EAAD,UAASQ,IACT,cAAC,IAAD,CAAMN,OAAO,OAAOQ,SAAS,OAAOC,SAAS,WAA7C,SACE,mCAAGjC","file":"static/js/10.b876ea57.chunk.js","sourcesContent":["import { View, Flex, Heading } from \"@adobe/react-spectrum\"\nimport { useState } from \"react\"\nimport { useMediaQuery } from \"../../shared/hooks/useMediaQuery\"\nimport { ThemeButton } from \"../../features/theme\"\nimport { BasicComponentProps, Logo, MenuTrigger } from \"../../shared/components\"\n\nexport type HeaderProps = BasicComponentProps & {\n  onMenuItemPress?: (key: React.Key) => void\n}\n\nexport default ({ children }: HeaderProps) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const isMobile = useMediaQuery(`(max-width:640px)`)\n\n  return (\n    <View borderBottomWidth=\"thin\" borderColor=\"gray-300\" padding=\"size-150\">\n      <Flex\n        gap=\"size-50\"\n        alignItems=\"center\"\n        height=\"100%\"\n        justifyContent=\"space-between\"\n      >\n        <Flex gap=\"size-150\" alignItems=\"center\">\n          <Logo size=\"M\" />\n          <Heading level={isMobile ? 3 : 2} marginTop=\"0\" marginBottom=\"0\">\n            Мои инвестиции\n          </Heading>\n        </Flex>\n        <Flex gap=\"size-150\" alignItems=\"center\">\n          <ThemeButton />\n          <MenuTrigger isOpen={isOpen} setIsOpen={setIsOpen}>\n            {children}\n          </MenuTrigger>\n        </Flex>\n      </Flex>\n    </View>\n  )\n}\n","import { useEffect, useState } from \"react\"\n\nexport const useMediaQuery = (query: string) => {\n  if (typeof window === \"undefined\" || typeof window.matchMedia === \"undefined\")\n    throw Error(\"Обновите браузер, чтобы воспользоваться этим приложением\")\n\n  const mediaQuery = window.matchMedia(query)\n  const [match, setMatch] = useState(Boolean(mediaQuery.matches))\n\n  useEffect(() => {\n    const handler = () => setMatch(Boolean(mediaQuery.matches))\n    mediaQuery.addEventListener(\"change\", handler)\n    return () => mediaQuery.removeEventListener(\"change\", handler)\n  }, [])\n\n  return match\n}\n","import { Flex, View } from \"@adobe/react-spectrum\"\nimport Header from \"../header\"\n\nexport type LayoutProps = {\n  children: React.ReactNode\n  menuItems: React.ReactNode\n}\n\nexport default ({ children, menuItems }: LayoutProps) => {\n  return (\n    <Flex direction=\"column\" height=\"100%\" gap=\"size-200\">\n      <Header>{menuItems}</Header>\n      <View height=\"100%\" overflow=\"auto\" position=\"relative\">\n        <>{children}</>\n      </View>\n    </Flex>\n  )\n}\n"],"sourceRoot":""}